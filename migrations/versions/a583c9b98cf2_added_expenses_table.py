"""added expenses table

Revision ID: a583c9b98cf2
Revises: e3c25e97b317
Create Date: 2024-11-22 15:44:12.018366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a583c9b98cf2'
down_revision: Union[str, None] = 'e3c25e97b317'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('expenses', sa.Column('scope', sa.String(), nullable=False))
    op.add_column('expenses', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('expenses', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('expenses', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('expenses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('expenses', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('expenses', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.create_foreign_key(None, 'expenses', 'users', ['created_by_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.alter_column('expenses', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('expenses', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('expenses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('expenses', 'updated_at')
    op.drop_column('expenses', 'created_at')
    op.drop_column('expenses', 'created_by_id')
    op.drop_column('expenses', 'scope')
    # ### end Alembic commands ###
